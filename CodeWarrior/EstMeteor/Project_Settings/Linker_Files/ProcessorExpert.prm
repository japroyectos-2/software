/*
** ###################################################################
**     THIS MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename  : Vectors.s
**     Project   : ProcessorExpert
**     Processor : MC9S08QE128CLK
**     Compiler  : CodeWarrior HCS08 C Compiler
**     Date/Time : 2018-04-07, 16:05, # CodeGen: 0
**     Abstract  :
**        This file is used by the linker. It describes files to be linked,
**        memory ranges, stack size, etc. For detailed description of the PRM file
**        see CodeWarrior documentation. This file is generated by default.
**        You can switch off generation by setting the property
**        "Generate PRM file = no" on the compiler tab in CPU component and then modify
**        this file if needed.
**
**     Copyright : 1997 - 2013 Freescale Semiconductor, Inc. All Rights Reserved.
**     SOURCE DISTRIBUTION PERMISSIBLE as directed in End User License Agreement.
**     
**     http      : www.freescale.com
**     mail      : support@freescale.com
** ###################################################################
*/

NAMES

END

SECTIONS
    Z_RAM                    =  READ_WRITE   0x0080 TO 0x009F;
    RAM                      =  READ_WRITE   0x00A0 TO 0x17FF;
    RAM1                     =  READ_WRITE   0x1880 TO 0x207F;
    /* unbanked FLASH ROM */
    ROM                      =  READ_ONLY    0x2080 TO 0x7FFF;
    ROM1                     =  READ_ONLY    0xC000 TO 0xFFAD;
    /* banked FLASH ROM */
    PPAGE_0                  =  READ_ONLY    0x008000 TO 0x00A07F; /* PAGE partially contained in ROM segment */
    PPAGE_2                  =  READ_ONLY    0x028000 TO 0x02BFFF; 
    PPAGE_4                  =  READ_ONLY    0x048000 TO 0x04BFFF; 
    PPAGE_5                  =  READ_ONLY    0x058000 TO 0x05BFFF; 
    PPAGE_6                  =  READ_ONLY    0x068000 TO 0x06BFFF; 
    PPAGE_7                  =  READ_ONLY    0x078000 TO 0x07BFFF; 
END

PLACEMENT
    DEFAULT_RAM,                        /* non-zero page variables */
                                        INTO  RAM,RAM1;

    NON_BANKED, DEFAULT_ROM, ROM_VAR, STRINGS INTO  ROM;

    PAGED_ROM                           /* routines which can be banked */
                                        INTO  PPAGE_0,PPAGE_2,PPAGE_4,PPAGE_5,PPAGE_6,PPAGE_7,ROM1;

    _DATA_ZEROPAGE,                     /* zero page variables */
    MY_ZEROPAGE                         INTO  Z_RAM;
END

INIT _EntryPoint                       /* The entry point of the application. This function is generated into the CPU module. */

STACKSIZE 0x0200                       /* Size of the system stack. Value can be changed on the "Build options" tab */

